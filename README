ActionHelper
============

ActionHelper is a Rails plugin that allows you to create view helper modules 
for specific actions or templates, as oppose to the controller-wide helper 
facility Rails provides.  

Example
=======

There are currently three ways to get action-specific helpers mixed in.

module SuperHawtnessHelper end
module ExampleSweetnessHelper end

class ExampleController < ActionController::Base
  include ActionHelper
  
  helper SuperHawtnessHelper, :only => :hawtness
  
  def hawtness
    ...
  end
  
  def sweetness
    ...
  end
  
  def supercool; action_helper ExampleSweetnessHelper
    ...
  end
end

The ActionController::Base#helper class method now accepts an options hash 
that can include an :only option specifying the actions that use the given 
helper(s).

Because of a naming convention similar to Rails' built in helper support, the 
template object that renders the response for the #sweetness action will have 
ExampleSweetnessHelper mixed in.  (To be clear, when processing 
FooController#bar, ActionHelper will look for FooBarHelper.)

By calling #action_helper, the #supercool action gets ExampleSweetnessHelper 
for its template too.

TODO
====

* Allow an action to declare what helper(s) it wants by name in addition to 
  passing the module itself (same as Rails does).
* Experiment with keying off the template name rather than the action (to deal 
  with actions that might render alternate templates)
* Build up a master module for each action so we're not doing so many extends 
  on every request.
* Get things self-contained so specs (including controller specs) run without 
  a surrounding Rails app.


Copyright (c) 2008 John D. Hume, released under the MIT license
